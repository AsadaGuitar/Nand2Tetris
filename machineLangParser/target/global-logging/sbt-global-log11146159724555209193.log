[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\d.takahashi\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\d.takahashi\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 16.0.1)
[debug]       Load.loadUnit: plugins took 143.7887ms
[debug]       Load.loadUnit: defsScala took 0.3105ms
[debug] [Loading] Scanning directory C:\Users\d.takahashi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\d.takahashi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.2397 ms
[debug]           Load.resolveProject(global-plugins) took 79.2549ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\d.takahashi\.sbt\1.0\plugins, plugins: List(<none>))) took 122.7235ms
[debug] [Loading] Done in C:\Users\d.takahashi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 159.7492ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2243ms
[debug]     Load.loadUnit(file:/C:/Users/d.takahashi/.sbt/1.0/plugins/, ...) took 316.2906ms
[debug]   Load.apply: load took 897.2477ms
[debug]   Load.apply: resolveProjects took 7.2159ms
[debug]   Load.apply: finalTransforms took 96.4217ms
[debug]   Load.apply: config.delegates took 11.4847ms
[debug]   Load.apply: Def.make(settings)... took 486.7099ms
[debug]   Load.apply: structureIndex took 95.7924ms
[debug]   Load.apply: mkStreams took 1.5942ms
[info] loading global plugins from C:\Users\d.takahashi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5176.5214ms
[debug]           Load.loadUnit: plugins took 44.4325ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project
[debug]             Load.loadUnit: mkEval took 7.2403ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7885 ms
[info] loading settings for project machinelangparser-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(machinelangparser-build) took 2.7764ms
[debug]             Load.loadTransitive: finalizeProject(Project(id machinelangparser-build, base: C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project, plugins: List(<none>))) took 5.0718ms
[debug] [Loading] Done in C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project, returning: (machinelangparser-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3326.899ms
[debug]           Load.loadUnit: cleanEvalClasses took 24.0666ms
[debug]         Load.loadUnit(file:/C:/Users/d.takahashi/Document/Projects/cs/nand2tetris/machineLangParser/project/, ...) took 3396.5668ms
[debug]       Load.apply: load took 3398.4142ms
[debug]       Load.apply: resolveProjects took 0.0853ms
[debug]       Load.apply: finalTransforms took 9.3971ms
[debug]       Load.apply: config.delegates took 0.4191ms
[debug]       Load.apply: Def.make(settings)... took 125.4272ms
[debug]       Load.apply: structureIndex took 26.3713ms
[debug]       Load.apply: mkStreams took 0.0019ms
[info] loading project definition from C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7152.5115ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser
[debug]       Load.loadUnit: mkEval took 0.6338ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8507 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 30.3485ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser, plugins: List(<none>))) took 34.2611ms
[debug] [Loading] Done in C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2372.4061ms
[debug]     Load.loadUnit: cleanEvalClasses took 57.8199ms
[debug]   Load.loadUnit(file:/C:/Users/d.takahashi/Document/Projects/cs/nand2tetris/machineLangParser/, ...) took 9583.9013ms
[debug] Load.apply: load took 9585.6568ms
[debug] Load.apply: resolveProjects took 0.0919ms
[debug] Load.apply: finalTransforms took 28.5444ms
[debug] Load.apply: config.delegates took 0.3846ms
[debug] Load.apply: Def.make(settings)... took 72.2827ms
[debug] Load.apply: structureIndex took 23.7832ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to machineLangParser (in build file:/C:/Users/d.takahashi/Document/Projects/cs/nand2tetris/machineLangParser/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)

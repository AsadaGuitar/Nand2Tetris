[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\d.takahashi\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\d.takahashi\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 16.0.1)
[debug]       Load.loadUnit: plugins took 115.5455ms
[debug]       Load.loadUnit: defsScala took 0.2745ms
[debug] [Loading] Scanning directory C:\Users\d.takahashi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\d.takahashi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.2944 ms
[debug]           Load.resolveProject(global-plugins) took 42.4477ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\d.takahashi\.sbt\1.0\plugins, plugins: List(<none>))) took 78.624ms
[debug] [Loading] Done in C:\Users\d.takahashi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 103.7257ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4016ms
[debug]     Load.loadUnit(file:/C:/Users/d.takahashi/.sbt/1.0/plugins/, ...) took 230.413ms
[debug]   Load.apply: load took 5609.6938ms
[debug]   Load.apply: resolveProjects took 7.5234ms
[debug]   Load.apply: finalTransforms took 90.2335ms
[debug]   Load.apply: config.delegates took 6.9267ms
[debug]   Load.apply: Def.make(settings)... took 486.1ms
[debug]   Load.apply: structureIndex took 95.5449ms
[debug]   Load.apply: mkStreams took 1.4876ms
[info] loading global plugins from C:\Users\d.takahashi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8492.0505ms
[debug]           Load.loadUnit: plugins took 35.1073ms
[debug]           Load.loadUnit: defsScala took 0.0112ms
[debug] [Loading] Scanning directory C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project
[debug]             Load.loadUnit: mkEval took 7.8525ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.4004 ms
[info] loading settings for project machinelangparser-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(machinelangparser-build) took 14.4684ms
[debug]             Load.loadTransitive: finalizeProject(Project(id machinelangparser-build, base: C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project, plugins: List(<none>))) took 19.1285ms
[debug] [Loading] Done in C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project, returning: (machinelangparser-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3887.7617ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.837ms
[debug]         Load.loadUnit(file:/C:/Users/d.takahashi/Document/Projects/cs/nand2tetris/machineLangParser/project/, ...) took 3938.1273ms
[debug]       Load.apply: load took 3940.268ms
[debug]       Load.apply: resolveProjects took 0.1015ms
[debug]       Load.apply: finalTransforms took 107.6364ms
[debug]       Load.apply: config.delegates took 0.6732ms
[debug]       Load.apply: Def.make(settings)... took 417.71ms
[debug]       Load.apply: structureIndex took 50.1483ms
[debug]       Load.apply: mkStreams took 0.0017ms
[info] loading project definition from C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6868.4321ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\d.takahashi\Document\Projects\cs\nand2tetris\machineLangParser
[debug]       Load.loadUnit: mkEval took 0.4108ms
[debug] Type error in expression
[debug] 	at sbt.compiler.Eval.checkError(Eval.scala:501)
[debug] 	at sbt.compiler.Eval.compileAndLoad(Eval.scala:274)
[debug] 	at sbt.compiler.Eval.compileAndLoad(Eval.scala:241)
[debug] 	at sbt.compiler.Eval.evalCommon(Eval.scala:215)
[debug] 	at sbt.compiler.Eval.evalDefinitions(Eval.scala:166)
[debug] 	at sbt.internal.EvaluateConfigurations$.evaluateDefinitions(EvaluateConfigurations.scala:326)
[debug] 	at sbt.internal.EvaluateConfigurations$.evaluateSbtFile(EvaluateConfigurations.scala:152)
[debug] 	at sbt.internal.Load$.loadSettingsFile$1(Load.scala:1120)
[debug] 	at sbt.internal.Load$.$anonfun$discoverProjects$2(Load.scala:1130)
[debug] 	at scala.collection.MapLike.getOrElse(MapLike.scala:131)
[debug] 	at scala.collection.MapLike.getOrElse$(MapLike.scala:129)
[debug] 	at scala.collection.AbstractMap.getOrElse(Map.scala:65)
[debug] 	at sbt.internal.Load$.memoLoadSettingsFile$1(Load.scala:1129)
[debug] 	at sbt.internal.Load$.$anonfun$discoverProjects$4(Load.scala:1137)
[debug] 	at scala.collection.immutable.List.map(List.scala:293)
[debug] 	at sbt.internal.Load$.loadFiles$1(Load.scala:1137)
[debug] 	at sbt.internal.Load$.discoverProjects(Load.scala:1151)
[debug] 	at sbt.internal.Load$.discover$1(Load.scala:903)
[debug] 	at sbt.internal.Load$.loadTransitive(Load.scala:957)
[debug] 	at sbt.internal.Load$.loadProjects$1(Load.scala:740)
[debug] 	at sbt.internal.Load$.$anonfun$loadUnit$12(Load.scala:743)
[debug] 	at sbt.internal.Load$.timed(Load.scala:1408)
[debug] 	at sbt.internal.Load$.$anonfun$loadUnit$1(Load.scala:743)
[debug] 	at sbt.internal.Load$.timed(Load.scala:1408)
[debug] 	at sbt.internal.Load$.loadUnit(Load.scala:696)
[debug] 	at sbt.internal.Load$.$anonfun$builtinLoader$4(Load.scala:494)
[debug] 	at sbt.internal.BuildLoader$.$anonfun$componentLoader$5(BuildLoader.scala:180)
[debug] 	at sbt.internal.BuildLoader.apply(BuildLoader.scala:245)
[debug] 	at sbt.internal.Load$.loadURI$1(Load.scala:556)
[debug] 	at sbt.internal.Load$.loadAll(Load.scala:572)
[debug] 	at sbt.internal.Load$.loadURI(Load.scala:502)
[debug] 	at sbt.internal.Load$.load(Load.scala:481)
[debug] 	at sbt.internal.Load$.$anonfun$apply$1(Load.scala:243)
[debug] 	at sbt.internal.Load$.timed(Load.scala:1408)
[debug] 	at sbt.internal.Load$.apply(Load.scala:243)
[debug] 	at sbt.internal.Load$.defaultLoad(Load.scala:56)
[debug] 	at sbt.BuiltinCommands$.liftedTree1$1(Main.scala:953)
[debug] 	at sbt.BuiltinCommands$.doLoadProject(Main.scala:953)
[debug] 	at sbt.BuiltinCommands$.$anonfun$loadProjectImpl$2(Main.scala:906)
[debug] 	at sbt.Command$.$anonfun$applyEffect$4(Command.scala:150)
[debug] 	at sbt.Command$.$anonfun$applyEffect$2(Command.scala:145)
[debug] 	at sbt.Command$.process(Command.scala:189)
[debug] 	at sbt.MainLoop$.$anonfun$processCommand$5(MainLoop.scala:245)
[debug] 	at scala.Option.getOrElse(Option.scala:189)
[debug] 	at sbt.MainLoop$.process$1(MainLoop.scala:245)
[debug] 	at sbt.MainLoop$.processCommand(MainLoop.scala:278)
[debug] 	at sbt.MainLoop$.$anonfun$next$5(MainLoop.scala:163)
[debug] 	at sbt.State$StateOpsImpl$.runCmd$1(State.scala:289)
[debug] 	at sbt.State$StateOpsImpl$.process$extension(State.scala:325)
[debug] 	at sbt.MainLoop$.$anonfun$next$4(MainLoop.scala:163)
[debug] 	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)
[debug] 	at sbt.MainLoop$.next(MainLoop.scala:163)
[debug] 	at sbt.MainLoop$.run(MainLoop.scala:144)
[debug] 	at sbt.MainLoop$.$anonfun$runWithNewLog$1(MainLoop.scala:119)
[debug] 	at sbt.io.Using.apply(Using.scala:27)
[debug] 	at sbt.MainLoop$.runWithNewLog(MainLoop.scala:112)
[debug] 	at sbt.MainLoop$.runAndClearLast(MainLoop.scala:66)
[debug] 	at sbt.MainLoop$.runLoggedLoop(MainLoop.scala:51)
[debug] 	at sbt.MainLoop$.runLogged(MainLoop.scala:42)
[debug] 	at sbt.StandardMain$.runManaged(Main.scala:215)
[debug] 	at sbt.xMain$.$anonfun$run$11(Main.scala:133)
[debug] 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
[debug] 	at scala.Console$.withIn(Console.scala:230)
[debug] 	at sbt.internal.util.Terminal$.withIn(Terminal.scala:569)
[debug] 	at sbt.internal.util.Terminal$.$anonfun$withStreams$1(Terminal.scala:350)
[debug] 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
[debug] 	at scala.Console$.withOut(Console.scala:167)
[debug] 	at sbt.internal.util.Terminal$.$anonfun$withOut$2(Terminal.scala:559)
[debug] 	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:62)
[debug] 	at scala.Console$.withErr(Console.scala:196)
[debug] 	at sbt.internal.util.Terminal$.withOut(Terminal.scala:559)
[debug] 	at sbt.internal.util.Terminal$.withStreams(Terminal.scala:350)
[debug] 	at sbt.xMain$.withStreams$1(Main.scala:87)
[debug] 	at sbt.xMain$.run(Main.scala:121)
[debug] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[debug] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
[debug] 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[debug] 	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
[debug] 	at sbt.internal.XMainConfiguration.run(XMainConfiguration.java:57)
[debug] 	at sbt.xMain.run(Main.scala:46)
[debug] 	at xsbt.boot.Launch$.$anonfun$run$1(Launch.scala:149)
[debug] 	at xsbt.boot.Launch$.withContextLoader(Launch.scala:176)
[debug] 	at xsbt.boot.Launch$.run(Launch.scala:149)
[debug] 	at xsbt.boot.Launch$.$anonfun$apply$1(Launch.scala:44)
[debug] 	at xsbt.boot.Launch$.launch(Launch.scala:159)
[debug] 	at xsbt.boot.Launch$.apply(Launch.scala:44)
[debug] 	at xsbt.boot.Launch$.apply(Launch.scala:21)
[debug] 	at xsbt.boot.Boot$.runImpl(Boot.scala:78)
[debug] 	at xsbt.boot.Boot$.run(Boot.scala:73)
[debug] 	at xsbt.boot.Boot$.main(Boot.scala:21)
[debug] 	at xsbt.boot.Boot.main(Boot.scala)
[error] sbt.compiler.EvalException: Type error in expression
[error] sbt.compiler.EvalException: Type error in expression
[error] Use 'last' for the full log.
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
